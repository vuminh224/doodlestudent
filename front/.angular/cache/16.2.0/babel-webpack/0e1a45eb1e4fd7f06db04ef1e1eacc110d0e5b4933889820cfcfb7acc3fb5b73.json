{"ast":null,"code":"import _defineProperty from \"/home/tuanvu/Desktop/M1/WE/doodlestudent/front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ObjectUtils } from 'primeng/utils';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { CheckIcon } from 'primeng/icons/check';\nconst _c0 = [\"cb\"];\nfunction _class_ng_container_5_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.checkboxIcon);\n  }\n}\nfunction _class_ng_container_5_ng_container_1_CheckIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"CheckIcon\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-checkbox-icon\");\n  }\n}\nfunction _class_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class_ng_container_5_ng_container_1_span_1_Template, 1, 1, \"span\", 8);\n    i0.ɵɵtemplate(2, _class_ng_container_5_ng_container_1_CheckIcon_2_Template, 1, 1, \"CheckIcon\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.checkboxIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.checkboxIcon);\n  }\n}\nfunction _class_ng_container_5_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction _class_ng_container_5_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, _class_ng_container_5_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction _class_ng_container_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, _class_ng_container_5_span_2_1_Template, 1, 0, null, 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.checkboxIconTemplate);\n  }\n}\nfunction _class_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, _class_ng_container_5_ng_container_1_Template, 3, 2, \"ng-container\", 5);\n    i0.ɵɵtemplate(2, _class_ng_container_5_span_2_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.checkboxIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checkboxIconTemplate);\n  }\n}\nconst _c1 = function (a1, a2, a3) {\n  return {\n    \"p-checkbox-label\": true,\n    \"p-checkbox-label-active\": a1,\n    \"p-disabled\": a2,\n    \"p-checkbox-label-focus\": a3\n  };\n};\nfunction _class_label_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 14);\n    i0.ɵɵlistener(\"click\", function _class_label_6_Template_label_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(3);\n      return i0.ɵɵresetView(ctx_r9.onClick($event, _r0, true));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.labelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(5, _c1, ctx_r2.checked(), ctx_r2.disabled, ctx_r2.focused));\n    i0.ɵɵattribute(\"for\", ctx_r2.inputId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.label);\n  }\n}\nconst _c2 = function (a1, a2, a3) {\n  return {\n    \"p-checkbox p-component\": true,\n    \"p-checkbox-checked\": a1,\n    \"p-checkbox-disabled\": a2,\n    \"p-checkbox-focused\": a3\n  };\n};\nconst _c3 = function (a0, a1, a2) {\n  return {\n    \"p-highlight\": a0,\n    \"p-disabled\": a1,\n    \"p-focus\": a2\n  };\n};\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Checkbox),\n  multi: true\n};\n/**\n * Checkbox is an extension to standard checkbox element with theming.\n * @group Components\n */\nlet Checkbox = /*#__PURE__*/(() => {\n  var _class;\n  class Checkbox {\n    constructor(cd) {\n      _defineProperty(this, \"cd\", void 0);\n      /**\n       * Value of the checkbox.\n       * @group Props\n       */\n      _defineProperty(this, \"value\", void 0);\n      /**\n       * Name of the checkbox group.\n       * @group Props\n       */\n      _defineProperty(this, \"name\", void 0);\n      /**\n       * When present, it specifies that the element should be disabled.\n       * @group Props\n       */\n      _defineProperty(this, \"disabled\", void 0);\n      /**\n       * Allows to select a boolean value instead of multiple values.\n       * @group Props\n       */\n      _defineProperty(this, \"binary\", void 0);\n      /**\n       * Label of the checkbox.\n       * @group Props\n       */\n      _defineProperty(this, \"label\", void 0);\n      /**\n       * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n       * @group Props\n       */\n      _defineProperty(this, \"ariaLabelledBy\", void 0);\n      /**\n       * Used to define a string that labels the input element.\n       * @group Props\n       */\n      _defineProperty(this, \"ariaLabel\", void 0);\n      /**\n       * Index of the element in tabbing order.\n       * @group Props\n       */\n      _defineProperty(this, \"tabindex\", void 0);\n      /**\n       * Identifier of the focus input to match a label defined for the component.\n       * @group Props\n       */\n      _defineProperty(this, \"inputId\", void 0);\n      /**\n       * Inline style of the component.\n       * @group Props\n       */\n      _defineProperty(this, \"style\", void 0);\n      /**\n       * Style class of the component.\n       * @group Props\n       */\n      _defineProperty(this, \"styleClass\", void 0);\n      /**\n       * Style class of the label.\n       * @group Props\n       */\n      _defineProperty(this, \"labelStyleClass\", void 0);\n      /**\n       * Form control value.\n       * @group Props\n       */\n      _defineProperty(this, \"formControl\", void 0);\n      /**\n       * Icon class of the checkbox icon.\n       * @group Props\n       */\n      _defineProperty(this, \"checkboxIcon\", void 0);\n      /**\n       * When present, it specifies that the component cannot be edited.\n       * @group Props\n       */\n      _defineProperty(this, \"readonly\", void 0);\n      /**\n       * When present, it specifies that checkbox must be checked before submitting the form.\n       * @group Props\n       */\n      _defineProperty(this, \"required\", void 0);\n      /**\n       * Value in checked state.\n       * @group Props\n       */\n      _defineProperty(this, \"trueValue\", true);\n      /**\n       * Value in unchecked state.\n       * @group Props\n       */\n      _defineProperty(this, \"falseValue\", false);\n      /**\n       * Callback to invoke on value change.\n       * @param {CheckboxChangeEvent} event - Custom value change event.\n       * @group Emits\n       */\n      _defineProperty(this, \"onChange\", new EventEmitter());\n      _defineProperty(this, \"inputViewChild\", void 0);\n      _defineProperty(this, \"templates\", void 0);\n      _defineProperty(this, \"checkboxIconTemplate\", void 0);\n      _defineProperty(this, \"model\", void 0);\n      _defineProperty(this, \"onModelChange\", () => {});\n      _defineProperty(this, \"onModelTouched\", () => {});\n      _defineProperty(this, \"focused\", false);\n      this.cd = cd;\n    }\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'icon':\n            this.checkboxIconTemplate = item.template;\n            break;\n        }\n      });\n    }\n    onClick(event, checkbox, focus) {\n      event.preventDefault();\n      if (this.disabled || this.readonly) {\n        return;\n      }\n      this.updateModel(event);\n      if (focus) {\n        checkbox.focus();\n      }\n    }\n    updateModel(event) {\n      let newModelValue;\n      if (!this.binary) {\n        if (this.checked()) newModelValue = this.model.filter(val => !ObjectUtils.equals(val, this.value));else newModelValue = this.model ? [...this.model, this.value] : [this.value];\n        this.onModelChange(newModelValue);\n        this.model = newModelValue;\n        if (this.formControl) {\n          this.formControl.setValue(newModelValue);\n        }\n      } else {\n        newModelValue = this.checked() ? this.falseValue : this.trueValue;\n        this.model = newModelValue;\n        this.onModelChange(newModelValue);\n      }\n      this.onChange.emit({\n        checked: newModelValue,\n        originalEvent: event\n      });\n    }\n    handleChange(event) {\n      if (!this.readonly) {\n        this.updateModel(event);\n      }\n    }\n    onFocus() {\n      this.focused = true;\n    }\n    onBlur() {\n      this.focused = false;\n      this.onModelTouched();\n    }\n    focus() {\n      this.inputViewChild?.nativeElement.focus();\n    }\n    writeValue(model) {\n      this.model = model;\n      this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n    checked() {\n      return this.binary ? this.model === this.trueValue : ObjectUtils.contains(this.value, this.model);\n    }\n  }\n  _class = Checkbox;\n  _defineProperty(Checkbox, \"\\u0275fac\", function _class_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  });\n  _defineProperty(Checkbox, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"p-checkbox\"]],\n    contentQueries: function _class_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function _class_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputViewChild = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      value: \"value\",\n      name: \"name\",\n      disabled: \"disabled\",\n      binary: \"binary\",\n      label: \"label\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      ariaLabel: \"ariaLabel\",\n      tabindex: \"tabindex\",\n      inputId: \"inputId\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      labelStyleClass: \"labelStyleClass\",\n      formControl: \"formControl\",\n      checkboxIcon: \"checkboxIcon\",\n      readonly: \"readonly\",\n      required: \"required\",\n      trueValue: \"trueValue\",\n      falseValue: \"falseValue\"\n    },\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR])],\n    decls: 7,\n    vars: 26,\n    consts: [[3, \"ngStyle\", \"ngClass\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"readonly\", \"value\", \"checked\", \"disabled\", \"focus\", \"blur\", \"change\"], [\"cb\", \"\"], [1, \"p-checkbox-box\", 3, \"ngClass\", \"click\"], [4, \"ngIf\"], [3, \"class\", \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-checkbox-icon\", 4, \"ngIf\"], [\"class\", \"p-checkbox-icon\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"], [3, \"styleClass\"], [1, \"p-checkbox-icon\"], [4, \"ngTemplateOutlet\"], [3, \"ngClass\", \"click\"]],\n    template: function _class_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r11 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2, 3);\n        i0.ɵɵlistener(\"focus\", function _class_Template_input_focus_2_listener() {\n          return ctx.onFocus();\n        })(\"blur\", function _class_Template_input_blur_2_listener() {\n          return ctx.onBlur();\n        })(\"change\", function _class_Template_input_change_2_listener($event) {\n          return ctx.handleChange($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵlistener(\"click\", function _class_Template_div_click_4_listener($event) {\n          i0.ɵɵrestoreView(_r11);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(ctx.onClick($event, _r0, true));\n        });\n        i0.ɵɵtemplate(5, _class_ng_container_5_Template, 3, 2, \"ng-container\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, _class_label_6_Template, 2, 9, \"label\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunction3(18, _c2, ctx.checked(), ctx.disabled, ctx.focused));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"readonly\", ctx.readonly)(\"value\", ctx.value)(\"checked\", ctx.checked())(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"tabindex\", ctx.tabindex)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel)(\"aria-checked\", ctx.checked())(\"required\", ctx.required);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(22, _c3, ctx.checked(), ctx.disabled, ctx.focused));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.checked());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.label);\n      }\n    },\n    dependencies: function () {\n      return [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, CheckIcon];\n    },\n    styles: [\".p-checkbox{display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;vertical-align:bottom;position:relative}.p-checkbox-disabled{cursor:default!important;pointer-events:none}.p-checkbox-box{display:flex;justify-content:center;align-items:center}p-checkbox{display:inline-flex;vertical-align:bottom;align-items:center}.p-checkbox-label{line-height:1}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  }));\n  return Checkbox;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet CheckboxModule = /*#__PURE__*/(() => {\n  var _class2;\n  class CheckboxModule {}\n  _class2 = CheckboxModule;\n  _defineProperty(CheckboxModule, \"\\u0275fac\", function _class2_Factory(t) {\n    return new (t || _class2)();\n  });\n  _defineProperty(CheckboxModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _class2\n  }));\n  _defineProperty(CheckboxModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, CheckIcon, SharedModule]\n  }));\n  return CheckboxModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CHECKBOX_VALUE_ACCESSOR, Checkbox, CheckboxModule };\n//# sourceMappingURL=primeng-checkbox.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}